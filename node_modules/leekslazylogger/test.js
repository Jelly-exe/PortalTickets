const log = require('./index.js')
const readline = require('readline');
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

log.init(`leeksLazyLogger`, {custom:{special:{title:'type',colour:'blueBright'},database:{title:'MYSQL',colour:'cyanBright'}}})
log.basic(`some text here`) // white text with [timestamp] ...
log.console(`some info here`) // white text with [INFO | timestamp] ...
log.info(`some info here`) // cyan text with [INFO | timestamp] ...
log.debug(`some debugging info here`) // blue text with [DEBUG | timestamp] ...
log.success(`some info here`) // green text with [INFO | timestamp] ...
log.warn(`some warning here`) // yellow text with [WARN | timestamp] ...
log.error(`some error here`) // error text with [ERROR | timestamp] ...

log.basic(log.colour.magentaBright(`some kewl text here`)) // only the text after the timestamp will be coloured

log.warn(log.colour.yellowBright(log.style.bold(`stands out even more`))  + log.colour.red(` - but this bit is red`))

// or colour the whole line
log.info(`my super important info`, 'magentaBright') // colours the whole line magenta (including timestamp)
log.custom('TYPE', `my awesome info`) // [TYPE | timestamp], white
log.custom('TYPE', `my awesome info`, 'cyan') // [TYPE | timestamp], cyan
// the example below is a custom type (defined in initialisation) - NOT A DEFAULT
log.database('Successful (fake) connection established with \'fakeuser@fakehost\'') // uses a custom type, useful if you use one often

for(let c in log.colours){
  log.custom('TEST', c, c)
}


rl.on('line', (line) => { // this isn't required, but added this will allow you to type `exit` or `quit` to exit
  switch (line.trim().toLowerCase()) {
    case 'exit':
    case 'quit':
      log.console('Exiting...')
      process.exit(0);
      break;
     default:
       log.warn(`Unkown command '${line.trim().toLowerCase()}'`);
       break;
  }
});

// log.basic(log.get()) // log.get() will return the contents of the .log file currently being used
